# -*- coding: utf-8 -*-
"""face detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nfC3fIrytZLeTjLFAaTU2NZXYbnWELKM
"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
from google.colab.patches import cv2_imshow
print('Imported')

image=cv2.imread('/content/download.jpg')
image2=cv2.imread('/content/group imagfe.jpg')
plt.imshow(image,cmap='gray')

face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_eye.xml')

def detect_face(img):
  face_image= img.copy()
  face_rects=face_cascade.detectMultiScale(face_image)
  for(x,y,w,h) in face_rects:
    cv2.rectangle(face_image,(x,y),(x+w,y+h),(255,255,255),10)
  return face_image

result=detect_face(image)
plt.imshow(result,cmap='gray')

eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_eye.xml')
def detect_eyes(img):
  face_image= img.copy()
  eyes_rects=eye_cascade.detectMultiScale(face_image)
  for(x,y,w,h) in eyes_rects:
    cv2.rectangle(face_image,(x,y),(x+w,y+h),(255,255,255),10)
  return face_image

result=detect_eyes(image)
plt.imshow(result,cmap='gray')

cap=cv2.VideoCapture(0)
while True:
    ret,frame = cap.read(0)
    frame=detect_face(frame)
    cv2_imshow(frame)
    k=cv2.waitKey(1)
    if k==27:
      break

cap.release()
cv2.destroyAllWindows